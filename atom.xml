<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ritho's blog]]></title>
  <link href="http://blog.ritho.net/atom.xml" rel="self"/>
  <link href="http://blog.ritho.net/"/>
  <updated>2014-10-09T23:11:36+02:00</updated>
  <id>http://blog.ritho.net/</id>
  <author>
    <name><![CDATA[Ritho]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Make Tests on Android Projects III]]></title>
    <link href="http://blog.ritho.net/blog/2013/10/26/android-testing-III/"/>
    <updated>2013-10-26T18:56:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2013/10/26/android-testing-III</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
I had prepared the next entry of the Android testing tutorial, but I&#8217;ve found a
<a href="http://www.vogella.com/articles/AndroidTesting/article.html">tutorial</a> that explains everything about it, even some of the projects that improve
the Android test environment, so I&#8217;ve decided not reinvent the wheel and stop this
tutorial. It&#8217;s true that some parts seems more a summary than a tutorial, but there&#8217;s
nothing essential missing.</p>

<p>
I know you will miss my explanations, but, as usual, I don&#8217;t have much time and I
prefer to blog about new things, so sorry about keeping you in the half of the process</p>
<p>
:(.</p>

<p>
Happy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Happy Birthday GNU!]]></title>
    <link href="http://blog.ritho.net/blog/2013/09/30/GNU-30-years/"/>
    <updated>2013-09-30T00:40:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2013/09/30/GNU-30-years</id>
    <content type="html"><![CDATA[<p>
Hi all,</p>

<p>
Some days ago the GNU project got 30 years, and, thinking about all the things
that GNU and the free software have given to us I think it&#8217;s time to give them
a present. It doesn&#8217;t have to be money (although they deserve it), but some code,
an article, an speech explaining the virtues of the free software, or even
installing a free software to a friend or a family member.</p>

<p>
In my case, I&#8217;m going to renew my membership to fsfeurope and I&#8217;m going to
publish as free software a project that I&#8217;m doing with some partners. And you?
Are you going to give a present to GNU/fsf?</p>

<p>
Happy Hacking</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make Tests on Android Projects II]]></title>
    <link href="http://blog.ritho.net/blog/2013/09/22/android-testing-II/"/>
    <updated>2013-09-22T19:49:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2013/09/22/android-testing-II</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
As I promised more than a year ago ;) I&#8217;m going to continue the small tutorial about testing
on Android. During this year the testing on android has evolved a little bit and now we can
see projects, like robotium, that, although they have some errors and features not (well)
covered, helps you a lot in the testing process. Said that, let&#8217;s start!</p>

<!--more-->

<p>
The first step to test an android application (apart from having the code of the android
application, of course) is create a test project. For that we are going to use the command line,
mainly because, although you can use very complete graphical editors that helps you to do much of
the process automatically, I think it&#8217;s important to know where the things come from and why the
things work in that way. So, the command line to create the test project (as we can check <a href="https://developer.android.com/tools/testing/testing_otheride.html">here</a>) is:</p>

<p>
$ android create test-project -m &lt;main-path&gt; -n &lt;project-name&gt; -p &lt;test-path&gt;</p>

<p>
Where main-path is the path to the project of the application under test, project-name is the name
of the test project (not the name of the main project) and test-path is the directory where the test
project is going to be located. A test project depends on the android project that is testing, so is
going to compile against this project, recompiling (with a little bit of luck) all the source files
of the original project that needs to (re)compile, that&#8217;s why we need to indicate the path of the
main project under test.</p>

<p>
That also means that a test project is going to test only one application at a time, but it can be
updated to change the path of the main project for the case you want to test another project with the
same test project (for example, if you have two projects of the same application, one for a free
version and other for a premium version, or if you have a base test project that you want to adapt to
new applications).</p>

<p>
The test project doesn&#8217;t need to be located in any specific directory, so you can place it wherever you
want in your filesystem, but take care if you move the test project and you&#8217;ve defined a relative path
to the main project, because you&#8217;d need to update it.</p>

<p>
If you check the test project just created, you can see that it haves the same directory structure and
build file contents as regular Android application project. That&#8217;s because it&#8217;s an actual Android
application that use the testing and instrumentation framework and depends on other application to run
(like an application that use a library).</p>

<p>
The test framework is an extension of the JUnit test framework that adds access to the Android system
objects to test them, and the instrumentation framework is who actually execute the tests, starting the
application at the beginning of each test suite, shutting down the application once the test suite is
finished and who runs test by test of each test suite.</p>

<p>
Well, that&#8217;s enough for today. In the next post I&#8217;ll explain the compilation process of a test project
(checking the options at the compilation files) and how to run both on test in particular and all the
tests of the test project. In that way you can see the basic structure of a test.</p>

<p>
<b>To be continued&#x2026;</b></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm Back!]]></title>
    <link href="http://blog.ritho.net/blog/2013/09/17/back/"/>
    <updated>2013-09-17T18:42:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2013/09/17/back</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
I know it hass been more than a year without writing anything, but, between my
absorving work and the fact that I&#8217;m not really good with the written world (and
a little bit of lazyness, why no admit it), I didn&#8217;t found the time to dedicate
to the blog.</p>

<p>
Now I&#8217;m not going to give promises, but I&#8217;m going to try it hard to write at least
one post per week, and who knows, maybe once I&#8217;ve started to write I can write
more often and more fluently.</p>

<p>
Well, you&#8217;ll have notices from me during this week.</p>

<p>
Happy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make Tests on Android Projects I]]></title>
    <link href="http://blog.ritho.net/blog/2012/05/01/android-testing/"/>
    <updated>2012-05-01T21:45:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2012/05/01/android-testing</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
As you might know if you follow my blog I&#8217;m working at Schibsted, and
one of the projects we are developing is an Android application to
access to the classifieds websites of the company (like custojusto.pt,
bomnegocio.com, tori.fi, &#x2026;). One of the ideas that defines our work
method, Extreme Programming, is the continuous integration of the new
developments (or iterations) of the project, so we have to include
tests on every project we have in order to check the backward
compatibility, and the Android project is not an exception.</p>

<!--more-->

<p>
Making tests for any Android application (I should say on any mobile
application, but I&#8217;ve only seen Android and IOS) is a pain, and for a
lot of reasons, including:</p>

<ul class="org-ul">
<li>To test any android application you must have an android environment up and running.
That means that the tests are going to be slow because they are
going to run in a complete android environment (that can be a
virtual machine, an emulator or a real device).

<p>
It also means that you have to get several environment (android
version and devices) to test your application, because even with the
same version of Android the execution can be quite different between
on device and another (you find differences even between one device
emulator and the real device!).</p>

<p>
Only this can make the tests veeeeeery slow.</p>
</li>

<li>The test is a different project running in a different process.
This means that the test have to compile against the project, so
every change on the project lead to a clean and recompilation of all
the tests. That&#8217;s because ant is not so good as Makefile checking
the dependencies of each file (at least by default in the Android
projects, I supose it can be quite better if you customize it to
resolve all your dependencies, but this is not the usual). Sometimes
even I uninstall all the test project in order to delete from the
emulator some garbage that adb/android didn&#8217;t delete at the
reinstallation.

<p>
This also means that the test is responsible of running up the
applicatiion, set up all the parameters you need and shut down the
application. This is not bad, but I think the Android sdk should
include a testing environment capable of setting up and down the
application by you, so you don&#8217;t have to do it in each test.</p>

<p>
Also, you have to know what actions have to be done at the test
process and what actions should be done at the application process
(or wait until the android test run an exception telling you that
you have to run some action in the application process).</p>

<p>
Finally, if your application depends on an external application
(like the gallery or an email application) it&#8217;s almost impossible to
test this part of the application, because you can test and control
the application (or process) that you are developing, not an
external application, so in some cases there are parts of you
application impossible to test, because it&#8217;s not possible (at least
I didn&#8217;t found how) to simulate an external calling.</p>
</li>

<li>The documentation about testing is risible.
Appart of some basic documentation and examples at the official
<a href="https://developer.android.com/">android developers page</a> there isn&#8217;t any documentation of quality
about the testing process, so it&#8217;s very hard to learn how the tests
works and to make a good testsuite of your Android application. I&#8217;ve
found some posts that even recommend you to test your application
directly on the physical device :).
</li>
</ul>

<p>
For this reasons in the next few days I&#8217;m going to make a little
tutorial about how to make some tests to your Android application</p>

<p>
<b>To be continued&#x2026;</b></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coconet 1.0.2 Is Out!]]></title>
    <link href="http://blog.ritho.net/blog/2012/05/01/coconet-1.0.2/"/>
    <updated>2012-05-01T16:51:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2012/05/01/coconet-1.0.2</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
We have a new release of Coconet, in this case the version  1.0.2. In
this step I&#8217;ve finished the translations into english of all the code
(global variables, functions and structs) and I&#8217;ve made some extra
optimizations of the code (nothing important).</p>

<p>
In the next days/weeks (I&#8217;ve to work and to advance in other
projects :)) I&#8217;m going to port the project compilation process to
autoconf and automake. I want also to start the refactoring of the
code to remove at least some of the global variables and make some
more important optimizations of it.</p>

<p>
If you want to try the latest stable version you can download it from
<a href="https://github.com/i02sopop/coconet/tarball/v1.0.2">here</a>, and if you want to checkout the code from the repository and
collaborate with me please visit the <a href="https://github.com/i02sopop/coconet">github repository page</a>.</p>

<p>
Happy Hacking!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coconet 1.0.1 Is Out!]]></title>
    <link href="http://blog.ritho.net/blog/2012/03/04/coconet-1.0.1/"/>
    <updated>2012-03-04T00:03:00+01:00</updated>
    <id>http://blog.ritho.net/blog/2012/03/04/coconet-1.0.1</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
Today (well, actually yesterday :)) I&#8217;ve launched Coconet 1.0.1, the
first step to modernize my ending project at the University. In this
first step I&#8217;ve translated the comments and part of the code (it left
the functions name and the data structures) into english and I&#8217;ve made
some little optimizations. I&#8217;ve also structured a little bit the
project, but I&#8217;ve to add some additional information.</p>

<p>
My next steps are finishing the translation of all the code, make a
review of all the code to enhace the design and optimize it, port the
build of the project to autoconf and automake and make a simple web
page of the project containing its basic information, some links to
download the code (as a package and from the repository), &#x2026;</p>

<p>
If you want to try the latest stable version you can download it from
<a href="https://github.com/i02sopop/coconet/tarball/v1.0.1">here</a>, and if
you want to checkout the code from the repository and collaborate with
me please visit the <a href="https://github.com/i02sopop/coconet">github
repository page</a>.</p>

<p>
Happy Hacking!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Latest Adquisitionsn]]></title>
    <link href="http://blog.ritho.net/blog/2012/03/03/latest-adquisitions/"/>
    <updated>2012-03-03T23:09:00+01:00</updated>
    <id>http://blog.ritho.net/blog/2012/03/03/latest-adquisitions</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
I&#8217;m back from South America (I&#8217;ve been 6 weeks in Chile and Argentina)
with some good and bad news. The bad new is that I&#8217;ve been stolen and
I don&#8217;t have anymore some of my technical stuff, like a laptop, an
external hard drive, a tablet and some other things. I&#8217;ve also lost
some information, specially documentation and some projects of my
studies and previous works.</p>

<p>
The good thing is that I&#8217;ve to restore some of the things I&#8217;ve lost,
so I bought a desktop computer and a netbook. The desktop computer is
an AMD with 8 cores of 3.1GHz each, 8 GB of RAM, a 1 GB graphic card
with hdmi output and a 120 GB SSD hard drive. Yes, it&#8217;s a great
computer, so it&#8217;s going to stay with me for a really long time.</p>

<p>
The other toy I&#8217;ve bought, the netbook, is an Asus eeepc of 10&#8217; with
two cores of 1.67GHz each, 1 GB of RAM and a hard drive of 250 GB,
more than enough to have mobility and a real computer for my
travels. I think that between the two toys I&#8217;m going to be very
productive, so I hope you&#8217;ll see me more active in my projects and
around here.</p>

<p>
Happy Hacking!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geekphone Zero Review]]></title>
    <link href="http://blog.ritho.net/blog/2012/01/24/geekphone-review/"/>
    <updated>2012-01-24T17:15:00+01:00</updated>
    <id>http://blog.ritho.net/blog/2012/01/24/geekphone-review</id>
    <content type="html"><![CDATA[<p>
Hi all!</p>

<p>
First of all, please apologize for not publishing anything in three
months, but both because of work (with several travels in the middle)
and personal projects I didn&#8217;t have so much time to write.</p>

<p>
To celebrate my birthday (I&#8217;m 30!!!!) I&#8217;m going to write a review of
my new cell phone, the <a href="http://www.geeksphone.com/es/moviles/zero/">Geekphone Zero</a>. I got the phone at christmas
and I&#8217;ve to say that I&#8217;m very happy with it, because it works pretty
well (with some minor bugs related to the version of Android I&#8217;m
using), having a great quality/price rate.</p>

<p>
Its price is 165 euros free (without a phone company contract), a
reasonable price to a smartphone with Android (a high-end smartphone
cost perfectly 400-500 euros free), and with all your basics
covered (wifi, usb, bluetooth, gps, &#x2026;) and, with the last version of
Android 2.3, it goes pretty smooth.</p>

<p>
One of the major advantages of the phone is that you have root access,
so you can update it without losing the warranty. In fact, the company
work closely with the CyanogenMod group, so there is no problem to
install new updates of the phone from the Cyanogen ROM application.</p>

<p>
Happy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RIP]]></title>
    <link href="http://blog.ritho.net/blog/2011/10/30/RIP/"/>
    <updated>2011-10-30T03:47:00+01:00</updated>
    <id>http://blog.ritho.net/blog/2011/10/30/RIP</id>
    <content type="html"><![CDATA[<p>
As you may now by now, this month had passed out three important
figures in the Computer Science world: Steve Jobs, Dennis Ritchie and
John McCarthy.</p>

<!--more-->

<p>
Steve Jobs is the most famous of them by the general public, but, at
the same time, the less influential in the Computer Science world. His
most important achieve has been to change the perception and use of
the technology of a lot of people. He was capable of innovate and
connect with the general public, but, in my point of view, he was
wrong about oe essential thing, the openness of his products. During
all his career, and specially during his last years, he has managed his
products in a closed way (he even didn&#8217;t want to open the apple market
to independent developers!) and I think he has missed the opportunity
to really change the world if he would made free (as in freedom) at
least any of his products.</p>

<p>
Dennis Ritchie, as many of the articles has said about him, is one of
the original hackers. His great contribution (with other hackers) to
our world include the C programming language (probably the most used
programming language of all the times) and the Unix Operating System
(the same used by apple to develop Mac OS and used as a reference by
Richard M. Stallman and Linus Torvalds to develop GNU/Linux). This is
a perfect example of how a free software can influence in the world
(remember that Unix, at the beginnig, was open, and was after its
success when companies and organizations started to launch his own
closed version of Unix).</p>

<p>
The last one that have passed out is John McCarthy, creator of the
Lisp programming language and of the term Artificial Intelligence.
The Lisp programming language is less used than the C programming
language, but it has been the most used programming language in
Artificial Intelligence, in wich he is one of the major
contributors. He also was the first to publicly suggest that computer
time-sharing technology might lead to a future in which computing
power and even specific applications could be sold through the utility
business model.</p>

<p>
We&#8217;re going to miss them and we&#8217;ll try to continue their work the
better we can.</p>

<p>
RIP</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#SpanishRevolution, Part III]]></title>
    <link href="http://blog.ritho.net/blog/2011/10/10/Spanish-Revolution-III/"/>
    <updated>2011-10-10T00:22:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2011/10/10/Spanish-Revolution-III</id>
    <content type="html"><![CDATA[<p>
In the <a href="https://blogs.fsfe.org/palvarez/2011/09/14/spanishrevolution-part-ii/">second part</a> of this post I&#8217;ve explained the recent history and
evolution of the social movements in Spain. In this post I&#8217;m going to
focus in #15m (or Indignados) movement, how they&#8217;ve started, their
proposals, things that, <b>IMHO</b>, they&#8217;ve done well, things to improve
and where they should go.</p>

<p>
As I said in my previous post, Indignados movement has been influenced
by the #nolesvotes movement, which shows both how to self-organize in
a global way (the opposite of the traditional social movements has
done historically, working at a neighborhood level or, at best, at a
city level) and how the new technologies can help in this
self-organization, but, obviously, it&#8217;s not the only movement that has
influenced to #15M.</p>

<p>
In recent years the social movements in Spain have seen a revival in
grassroots organization, whose work in the neighborhoods has been an
essential breeding ground for movement #15M. These grassroots
organizations have a participatory democracy based on people&#8217;s
assemblies and consensus decision making. These horizontally
structured assemblies are completely transparent and open to anyone
who wants to participate. The groundwork has served not only to learn
work techniques and methodologies assemblies, but also enabled them to
know the people, know their concerns and problems and know how to work
with them.</p>

<p>
Therefore, having these two movements as parents it&#8217;s not strange how
quickly this movement has emerged and spread throughout all the country,
in a way that only a few people could imagine.</p>

<p>
On January 2011, the digital platform Democracia real YA (one of the
main actors in #15M movement) was created on Spanish social networks
and forums. Having the support of organisations such as ATTAC,
Intermon Oxfam, Ecologists in Action or Youth without Future, and
using Twitter and Facebook it called &#8220;the unemployed, poorly paid, the
subcontractors, the precarious, young people&#x2026;&#8221; to take the streets
on 15 May in almost every city in Spain (you have at Wikipedia a
comprehensive list of all the places that were called to take the
streets on that day). That same day, small demonstrations in support
of the Spanish ones were organised in Dublin, Lisbon, Amsterdam,
Istanbul, Bologna, London and Paris.</p>

<p>
The first protest was called under the motto &#8220;we are not goods in the
hands of politicians and bankers&#8221; and was focused on opposition to
what the protesters called &#8220;antisocial means in the hands of bankers&#8221;,
partly referring to the changes made in 2010 to contain the ongoing
European sovereign debt crisis through bailout of the banks, which the
Spanish society saw as responsible for the crisis, while at the same
time the government kept announcing social program cutbacks.
Protesters also demanded more democracy, a new electoral law and end
to political corruption as well as other claims, such as banks
nationalisation.</p>

<p>
The main demand of #15M is a radical change in Spanish politics, and,
although #15M is a heterogeneous and ambiguous group, they share a
strong rejection of unemployment, welfare cuts, Spanish politicians,
the current two-party system in Spain between the Spanish Socialist
Workers&#8217; Party and the People&#8217;s Party, as well as the current
political system, capitalism, banks and bankers, political corruption
and firmly support what they call basic rights: home, work, culture,
health and education.</p>

<p>
As #nolesvotes, they don&#8217;t consider themselves to be represented by
any traditional party nor favoured by the measures approved by
politicians. If you want to know more about the #15M proposals and
actions you can visit their <a href="http://movimiento15m.org/">official page</a> and read their <a href="http://movimiento15m.org/manifiesto-movimiento-15m-%C2%A1democracia-real-ya/#more-5">manifesto</a>.</p>

<p>
The impact of #15M has been bigger than anyone thought, because
according to statistics published by RTVE (the Spanish public
broadcasting company) between 6.5 and 8 million Spaniards have
participated in these protests, an unthinkable thing at the beginning
of the year, and in this kind of things you can&#8217;t trust the official
information, so probably the participation has been even more.</p>

<p>
I think the most important thing that this movement has made is to
make the spanish population aware that we can change the actual
situation of our country, because a lot of people didn&#8217;t think they
can do something to make a change.</p>

<p>
Also, I think that #15M can have a life much longer than much people
can imagine, from one side because the changes they are proposing are
big ones, and they need time to define both the changes we have to
make to have a fairly society and the strategy to make this changes
possible, and from the other side because they have reach a big impact
in the population, a lot of people has been a part of #15M, and being
part of a movement like this makes you feel that your contribution is
important, and, although sometimes you can desperate, this is a
feeling that once you have it you want to keep it.</p>

<p>
Seeing the movement from the outside (although I wanted to involve
myself in the movement I couldn&#8217;t find the time until now) I think
that sometimes they&#8217;ve enter in the politician&#8217;s game more than they
needs, but, obviously, it&#8217;s a new and complex situation to handle and
it can&#8217;t be perfect.</p>

<p>
The movement has passed some critical times and situations (like the
time after the local elections or the Pope visit), and they&#8217;ll going
to pass some more critical situations, but I think that the most
important one is to handle the people&#8217;s mood (it&#8217;s a long path and a
lot of people can desperate).</p>

<p>
Finally, although the movement can end in nothing, I think that the
process is very important, not only because we&#8217;re trying to change
important thinks, but also because we are changing the point of view
of a lot of people that, until now, they didn&#8217;t realize they can make
a change, and this is the seed of future revolutions.</p>

<p>
Happy Hacking!</p>

<p>
P.D.: You can access to information about the 15-M movement at the
wikipedia <a href="https://secure.wikimedia.org/wikipedia/es/wiki/Movimiento_15-M">here</a>, <a href="https://secure.wikimedia.org/wikipedia/es/wiki/15M">here</a> (in spanish) and <a href="https://secure.wikimedia.org/wikipedia/en/wiki/2011_Spanish_protests">here</a> (in english).</p>

<p>
P.P.D.: All the ideas I expose here are personal opinions, comming
only from myself, and here I don&#8217;t represent any of the organizations
I belong to.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Org2blog, La Herramienta De Emacs Para Bloguear]]></title>
    <link href="http://blog.ritho.net/blog/2011/09/14/org2blog-es/"/>
    <updated>2011-09-14T19:41:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2011/09/14/org2blog-es</id>
    <content type="html"><![CDATA[<p>
¡Buenas a todos desde Brasil!</p>

<p>
Hace algunos días descubrí una herramienta que me puede ayudar a
bloguear con bastante más frecuencia, Org2Blog. Es básicamente un
plugin del paquete org para publicar posts desde ficheros org con
emacs. No he usado anteriormente org-mode, asi que he estado
investigando un poco y he podido comprobar que no es sólo un paquete
para publicar entradas en el blog, sino que además es una herramienta
para administrar tu agenda y tu lista de cosas poor hacer, así que he
estado unos días configurándolo y me da la impresión de que lo voy a
usar bastante y me va a ser de gran ayuda.</p>

<p>
La parte de blog parece ser bastante sencilla, porque puedes definir
el post con unas cuantas etiquetas sencillas de recordar y no define
ningún formato extraño para escribir el post (como hacen muchos
wikis). Tu sólo te tienes que ocupar de escribir el post en texto
<b>plano</b> y el paquete se las arregla para convertirlo en tu entrada html.</p>

<p>
Aunque creo que se puede usar para otros blogs distintos de Wordpress,
te recomiendo que mires que paquete funciona mejor para tu blog (por
ejemplo, para blogger hay un paquete que parece funcionar mejor que
este) antes de intentar volverte loco configurando este.</p>

<p>
Una de las cosas que quiero probar en los próximos días es la
integración con Atom, ya que esa integración se hace con otro paquete
y hasta ahora no he conseguido hacerlo funcionar.</p>

<p>
Espero poder bloguear mucho mas con esta herramienta, porque una de
las cosas que odio de los blogs es tener que estar conectado y con un
navegador abierto para escribir una entrada.</p>

<p>
Happy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Org2blog, the Emacs Blogging Experience]]></title>
    <link href="http://blog.ritho.net/blog/2011/09/14/org2blog-en/"/>
    <updated>2011-09-14T19:41:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2011/09/14/org2blog-en</id>
    <content type="html"><![CDATA[<p>
Hi from Brasil!</p>

<p>
Some days ago I&#8217;ve discovered a tool that can help me to blog more
frequently, Org2Blog. It&#8217;s basically a plugin for the org package to
publish posts from org files in emacs. I didn&#8217;t used previously
org-mode, so I&#8217;ve investigated a bit about it and I found that I can
use it not only for blog posting, but also to manage your agenda and
todo list, so I&#8217;ve configured it out and I think I&#8217;m going to use it a
lot.</p>

<p>
The blogging part seems to be pretty easy, because you can define your
post entry with a few and easy to remember tags and it doesn&#8217;t define
any weird format to write (like a lot of wiki pages). You only have to
write your post in <b>plain</b> text and the package manage to convert it
to your html entry.</p>

<p>
Although I think you can use it not only for Wordpress, I recomend you
to search for other packages if you&#8217;re using other blog engine (for
example, there is a package that works better with blogger that seems to work
better than this one).</p>

<p>
One of the thinks that I want to try in the next few days is the
integration of org2blog with atom. This integration is made by other
package and I couldn&#8217;t do it work in the last days.</p>

<p>
I hope to blog much more with this tool, cause one of the things that
I hate of blogging is the necessity of being connected and with a
browser opened to post an entry.</p>

<p>
Happy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#SpanishRevolution, Part II]]></title>
    <link href="http://blog.ritho.net/blog/2011/09/14/Spanish-Revolution-II/"/>
    <updated>2011-09-14T02:10:00+02:00</updated>
    <id>http://blog.ritho.net/blog/2011/09/14/Spanish-Revolution-II</id>
    <content type="html"><![CDATA[<p>
In the <a href="https://blogs.fsfe.org/palvarez/2011/08/19/spanishrevolution-part-i/">first part</a> of this post I&#8217;ve explained the economical situation
of Spain and how we&#8217;ve reached this situation. Now it&#8217;s the turn to
explain a little bit the origins of the Indignados movement ant the
recent history of the social movements in Spain.</p>

<p>
The Indignados movement (or #15M) born officially the 15 of May of
2011, although I think the real begining started before. In order to
understand better the origins of the #15M it&#8217;s better to explain a
little bit the recent phistory of the social movements in Spain.</p>

<p>
As you might know, before the actual democracy Spain was headed by
Francisco Franco, a dictator aligned ideologically with Hitler. Some
years before his dead (1975) the social movements in Spain begans to
be very strong, and, although they had to be subversive (the
government was very represive even after the dead of Franco), they
gain a lot of popularity, specially in the young people.</p>

<p>
After 1975 and during the 80&#8217;s Spain became into a cultural and
political revolution, and a lot of political parties (included PSOE
and the Comunist Party) and labor unions (CCOO, UGT, CNT, &#x2026;) were
legalized. This was the golden epoch of the social movements in Spain,
because a lot of people were conscious that it was important to be
part of the (not only) political change that was happening in Spain
and, a very important thing, they were a part of this changes, in part
because the government were taking them into consideration and making
changes in the way the social movements were saying.</p>

<p>
After that, during the final 80s and the 90s the political parties
forgot about the people and began to govern for themselves and for the
&#8220;markets&#8221; (a.k.a the rich people) and the social movements began to
accommodate, partially because the social situation were much better
than during the dictatorial period and partially because some state
mechanisms made the social movements too dependents from the
government charity, and in the moment that any organization depends
on the government it has to do some things and leave to do other
things to please them and survive.</p>

<p>
I think that the reaction to this circumstances come both from a new
social movement surged in Spain (and in the world :)), the Free
Software movement, that has become very strong sice the final 90s, and
from the deterioration of the spanish life style, specially with the
actual crisis environment.</p>

<p>
In the last years we&#8217;ve seen here in Spain a lot of movement against
the software patents in Europe and agains some copyright laws that
have emerged in the last years in Spain, and a big part of this
movement has been lead by hacktivist that have been participated in
the Free Software movement during several years.</p>

<p>
This movements have been organized dinamically, without a need of a
phisical organization, and in several times during a specific period
of time. This has made that the state, with his old mechanisms of
working, couldn&#8217;t stop this kind of organization, that have made the
enough noise to influence again in the political life of the country
and in the spanish people.</p>

<p>
This was the kind of organization of #nolesvotes, the father of
the #15m (or indignados) movement, who asks to vote in the municipal
elections to any party but PSOE or PP, rised after the approval of an
unfair copyright law by the two main political parties of
Spain. Because of that #nolesvotes gained the support and/or
comprehension of the population, being, in my point of view, a big
success.</p>

<p>
To be continued&#x2026;</p>
]]></content>
  </entry>
  
</feed>
